@model Sales_Web.Areas.Admin.Models.Products.Product
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Edit Product";
}
<h2>Edit Product</h2>
<form asp-action="Update" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>

        <span asp-validation-for="Description" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label asp-for="CategoryId">Category</label>
        <select asp-for="CategoryId" asp-items="@ViewBag.Categories"
                class="form-control"></select>
    </div>

    <div class="form-group">
        <label asp-for="ImageUrl">Product Image</label>
        <input type="file" asp-for="ImageUrl" class="form-control" id="productImage" onchange="loadFile(event)" />
        <img id="output" src="@Model.ImageUrl" style="max-width: 200px; max-height: 400px;" alt="Image Preview" />
    </div>
    <button type="submit" class="btn btn-primary">Update</button>
</form>

<script>
    var loadFile = function (event) {
        var output = document.getElementById('output');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };
</script>